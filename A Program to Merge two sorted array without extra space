public class Mergersortedarray {
    public static int nextGap(int gap) {
        if (gap <= 1) return 0;
        return (gap / 2) + (gap % 2);

    }
    public static void merge(int[] arr1, int[] arr2, int n, int m) {
        int gap = n + m;

        for (gap = nextGap(gap); gap > 0; gap = nextGap(gap)) {
            int i;
            for (i = 0; i + gap < n; i++) {
                if (arr1[i] > arr1[i + gap]) {
                    int temp = arr1[i];
                    arr1[i] = arr1[i + gap];
                    arr1[i + gap] = temp;
                }
            }
            int j;
            if (gap > n) {
                j = gap - n;
            } else {
                j = 0;
            }
            for (; i < n && j < m; i++, j++) {
                if (arr1[i] > arr2[j]) {
                    int temp = arr1[i];
                    arr1[i] = arr2[j];
                    arr2[j] = temp;
                }
            }
            if (j < m) {
                for (j = 0; j + gap < m; j++) {
                    if (arr2[j] > arr2[j + gap]) {
                        int temp = arr2[j];
                        arr2[j] = arr2[j + gap];
                        arr2[j + gap] = temp;
                    }
                }
            }
        }
    }

    public static void main(String[] args) {
        int[] arr1 = {51, 34, 27, 88, 64};
        int[] arr2 = {23, 39, 96};

        merge(arr1, arr2, arr1.length, arr2.length);

        System.out.print("arr1: ");
        for (int num : arr1) {
            System.out.print(num + " ");
        }
        System.out.println();

        System.out.print("arr2: ");
        for (int num : arr2) {
            System.out.print(num + " ");
        }
        System.out.println();

    }
}
